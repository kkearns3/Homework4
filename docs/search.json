[
  {
    "objectID": "Homework4.html",
    "href": "Homework4.html",
    "title": "Homework4",
    "section": "",
    "text": "If your working directory is myfolder/homework/, what relative path would you specify to get the file located at myfolder/MyData.csv?\n\n\n\"../MyData.csv\"\n\n\nWhat are the major benefits of using R projects?\n\n\n\nR projects work with git, for easy collaboration and version tracking.\nThe folder that the R project is in is the active directory, so the code can run successfully on other users’ machines provided you use relative paths.\nRelated files and the outputs can all be kept together with the R project, and a readme file can provide relevant background info and documentation.\n\n\n\nWhat is git and what is github?\n\n\nGit is the software installed on a local machine that allows the user to manage git repositories and use git commands in other programs like RStudio. Github is the online service that hosts git repositories that can be shared and collaborated on with multiple users. It’s all a part of version control, so that users can make changes to the repository, a team can maintain and merge branches, and all changes that have been pushed will be tracked so that stable programs can be maintained.\n\n\nWhat are the two main differences between a tibble and a data.frame?\n\n\n\nMost of the tidyverse functions work with tibbles, and if they input a tibble, they will also output a tibble. With data frames, a lot of BaseR functions might take in a data frame, but they might output a vector or some other object.\nTibbles have multiple classes, and R will look for the tibble_df, then tbl, then data.frame classes when executing methods. Data frames are only going to be usable in functions that have a method for data.frame.\n\n\n\nRewrite the following nested function call using BaseR’s chaining operator: arrange(filter(select(as_tibble(iris), starts_with(“Petal”), Species), Petal.Length &lt; 1.55), Species)\n\n\nas_tibble(iris) |&gt;\n   select(starts_with(\"Petal\"), Species) |&gt;\n   filter(Petal.Length &lt; 1.55) |&gt;\n   arrange(Species)"
  },
  {
    "objectID": "Homework4.html#task-1-conceptual-questions",
    "href": "Homework4.html#task-1-conceptual-questions",
    "title": "Homework4",
    "section": "",
    "text": "If your working directory is myfolder/homework/, what relative path would you specify to get the file located at myfolder/MyData.csv?\n\n\n\"../MyData.csv\"\n\n\nWhat are the major benefits of using R projects?\n\n\n\nR projects work with git, for easy collaboration and version tracking.\nThe folder that the R project is in is the active directory, so the code can run successfully on other users’ machines provided you use relative paths.\nRelated files and the outputs can all be kept together with the R project, and a readme file can provide relevant background info and documentation.\n\n\n\nWhat is git and what is github?\n\n\nGit is the software installed on a local machine that allows the user to manage git repositories and use git commands in other programs like RStudio. Github is the online service that hosts git repositories that can be shared and collaborated on with multiple users. It’s all a part of version control, so that users can make changes to the repository, a team can maintain and merge branches, and all changes that have been pushed will be tracked so that stable programs can be maintained.\n\n\nWhat are the two main differences between a tibble and a data.frame?\n\n\n\nMost of the tidyverse functions work with tibbles, and if they input a tibble, they will also output a tibble. With data frames, a lot of BaseR functions might take in a data frame, but they might output a vector or some other object.\nTibbles have multiple classes, and R will look for the tibble_df, then tbl, then data.frame classes when executing methods. Data frames are only going to be usable in functions that have a method for data.frame.\n\n\n\nRewrite the following nested function call using BaseR’s chaining operator: arrange(filter(select(as_tibble(iris), starts_with(“Petal”), Species), Petal.Length &lt; 1.55), Species)\n\n\nas_tibble(iris) |&gt;\n   select(starts_with(\"Petal\"), Species) |&gt;\n   filter(Petal.Length &lt; 1.55) |&gt;\n   arrange(Species)"
  },
  {
    "objectID": "Homework4.html#task-2-reading-delimited-data",
    "href": "Homework4.html#task-2-reading-delimited-data",
    "title": "Homework4",
    "section": "Task 2: Reading Delimited Data",
    "text": "Task 2: Reading Delimited Data\nAccess tidyverse package\n\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.3.3\n\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\n\nWarning: package 'tidyr' was built under R version 4.3.3\n\n\nWarning: package 'readr' was built under R version 4.3.3\n\n\nWarning: package 'dplyr' was built under R version 4.3.3\n\n\nWarning: package 'forcats' was built under R version 4.3.3\n\n\nWarning: package 'lubridate' was built under R version 4.3.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\nGlass Data\nRead in comma-delimited file from URL\n\n# read in data\nglass_data &lt;- \n  read_csv(file = \"https://www4.stat.ncsu.edu/online/datasets/glass.data\",\n           col_names = c(\"Id\", \"RI\", \"Na\", \"Mg\", \"Al\", \"Si\", \"K\", \"Ca\",\n                         \"Ba\", \"Fe\", \"Type_of_glass\")\n           )\n\nRows: 214 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (11): Id, RI, Na, Mg, Al, Si, K, Ca, Ba, Fe, Type_of_glass\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# print tibble\nglass_data\n\n# A tibble: 214 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_glass\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;         &lt;dbl&gt;\n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0                1\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0                1\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0                1\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0                1\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0                1\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26             1\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0                1\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0                1\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0                1\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11             1\n# ℹ 204 more rows\n\n\nOverwrite Type_of_glass\n\nglass_data &lt;- glass_data |&gt;\n  mutate(Type_of_glass = \n           case_when(Type_of_glass == 1 ~ \"building_windows_float_processed\",\n                     Type_of_glass == 2 ~ \"building_windows_non_float_processed\",\n                     Type_of_glass == 3 ~ \"vehicle_windows_float_processed\",\n                     Type_of_glass == 4 ~ \"vehicle_windows_non_float_processed\",\n                     Type_of_glass == 5 ~ \"containers\",\n                     Type_of_glass == 6 ~ \"tableware\",\n                     Type_of_glass == 7 ~ \"headlamps\"\n                    )\n         ) |&gt;\n  filter(Fe &lt; 0.2, Type_of_glass %in% c(\"tableware\", \"headlamps\"))\n\nglass_data\n\n# A tibble: 38 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_glass\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;        \n 1   177  1.52  14    2.39  1.56  72.4  0     9.57  0        0 tableware    \n 2   178  1.52  13.8  2.41  1.19  72.8  0     9.77  0        0 tableware    \n 3   179  1.52  14.5  2.24  1.62  72.4  0     9.26  0        0 tableware    \n 4   180  1.52  14.1  2.19  1.66  72.7  0     9.32  0        0 tableware    \n 5   181  1.51  14.4  1.74  1.54  74.6  0     7.59  0        0 tableware    \n 6   182  1.52  15.0  0.78  1.74  72.5  0     9.95  0        0 tableware    \n 7   183  1.52  14.2  0     2.09  72.7  0    10.9   0        0 tableware    \n 8   184  1.52  14.6  0     0.56  73.5  0    11.2   0        0 tableware    \n 9   185  1.51  17.4  0     0.34  75.4  0     6.65  0        0 tableware    \n10   186  1.51  13.7  3.2   1.81  72.8  1.76  5.43  1.19     0 headlamps    \n# ℹ 28 more rows\n\n\n\n\nYeast Data\nRead in data - fixed width columns -\n\nyeast_data &lt;- \n  read_fwf(\"https://www4.stat.ncsu.edu/online/datasets/yeast.data\",\n           fwf_widths(c(12, 6, 6, 6, 6, 6, 6, 6, 6, 3),\n                      c(\"seq_name\", \"mcg\", \"gvh\", \"alm\", \"mit\", \"erl\", \"pox\",\n                        \"vac\", \"nuc\", \"class\")\n                      )\n           )\n\nRows: 1484 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\n\nchr (2): seq_name, class\ndbl (8): mcg, gvh, alm, mit, erl, pox, vac, nuc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nyeast_data\n\n# A tibble: 1,484 × 10\n   seq_name     mcg   gvh   alm   mit   erl   pox   vac   nuc class\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1 ADT1_YEAST  0.58  0.61  0.47  0.13   0.5   0    0.48  0.22 MIT  \n 2 ADT2_YEAST  0.43  0.67  0.48  0.27   0.5   0    0.53  0.22 MIT  \n 3 ADT3_YEAST  0.64  0.62  0.49  0.15   0.5   0    0.53  0.22 MIT  \n 4 AAR2_YEAST  0.58  0.44  0.57  0.13   0.5   0    0.54  0.22 NUC  \n 5 AATM_YEAST  0.42  0.44  0.48  0.54   0.5   0    0.48  0.22 MIT  \n 6 AATC_YEAST  0.51  0.4   0.56  0.17   0.5   0.5  0.49  0.22 CYT  \n 7 ABC1_YEAST  0.5   0.54  0.48  0.65   0.5   0    0.53  0.22 MIT  \n 8 BAF1_YEAST  0.48  0.45  0.59  0.2    0.5   0    0.58  0.34 NUC  \n 9 ABF2_YEAST  0.55  0.5   0.66  0.36   0.5   0    0.49  0.22 MIT  \n10 ABP1_YEAST  0.4   0.39  0.6   0.15   0.5   0    0.58  0.3  CYT  \n# ℹ 1,474 more rows\n\n\nModify table in place\n\nRemove seq_name and nuc\nThen add columns for mean and median of all numeric variables, grouped by class\n\n\nyeast_data &lt;- yeast_data |&gt;\n  select(-c(seq_name, nuc)) |&gt;\n  group_by(class) |&gt;\n  mutate(across(where(is.numeric), \n                list(mean = mean, median = median),\n                .names = \"{.col}_{.fn}\")\n         )\n\nyeast_data\n\n# A tibble: 1,484 × 22\n# Groups:   class [10]\n     mcg   gvh   alm   mit   erl   pox   vac class mcg_mean mcg_median gvh_mean\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n 1  0.58  0.61  0.47  0.13   0.5   0    0.48 MIT      0.521       0.51    0.533\n 2  0.43  0.67  0.48  0.27   0.5   0    0.53 MIT      0.521       0.51    0.533\n 3  0.64  0.62  0.49  0.15   0.5   0    0.53 MIT      0.521       0.51    0.533\n 4  0.58  0.44  0.57  0.13   0.5   0    0.54 NUC      0.452       0.45    0.456\n 5  0.42  0.44  0.48  0.54   0.5   0    0.48 MIT      0.521       0.51    0.533\n 6  0.51  0.4   0.56  0.17   0.5   0.5  0.49 CYT      0.481       0.48    0.470\n 7  0.5   0.54  0.48  0.65   0.5   0    0.53 MIT      0.521       0.51    0.533\n 8  0.48  0.45  0.59  0.2    0.5   0    0.58 NUC      0.452       0.45    0.456\n 9  0.55  0.5   0.66  0.36   0.5   0    0.49 MIT      0.521       0.51    0.533\n10  0.4   0.39  0.6   0.15   0.5   0    0.58 CYT      0.481       0.48    0.470\n# ℹ 1,474 more rows\n# ℹ 11 more variables: gvh_median &lt;dbl&gt;, alm_mean &lt;dbl&gt;, alm_median &lt;dbl&gt;,\n#   mit_mean &lt;dbl&gt;, mit_median &lt;dbl&gt;, erl_mean &lt;dbl&gt;, erl_median &lt;dbl&gt;,\n#   pox_mean &lt;dbl&gt;, pox_median &lt;dbl&gt;, vac_mean &lt;dbl&gt;, vac_median &lt;dbl&gt;"
  },
  {
    "objectID": "Homework4.html#task-2-combining-excel-and-delimited-data",
    "href": "Homework4.html#task-2-combining-excel-and-delimited-data",
    "title": "Homework4",
    "section": "Task 2: Combining Excel and Delimited Data",
    "text": "Task 2: Combining Excel and Delimited Data\nAccess readxl package\n\nlibrary(readxl)\n\nWarning: package 'readxl' was built under R version 4.3.3\n\n\n\nWhite Wine Data\nRead in Excel file\n\nwhite_wine_data &lt;- read_excel(\"white-wine.xlsx\")\n\nwhite_wine_data\n\n# A tibble: 4,898 × 12\n   `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides\n             &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;     &lt;dbl&gt;\n 1               7               0.27          0.36             20.7     0.045\n 2              63               0.3           0.34              1.6     0.049\n 3              81               0.28          0.4               6.9     0.05 \n 4              72               0.23          0.32              8.5     0.058\n 5              72               0.23          0.32              8.5     0.058\n 6              81               0.28          0.4               6.9     0.05 \n 7              62               0.32          0.16              7       0.045\n 8               7               0.27          0.36             20.7     0.045\n 9              63               0.3           0.34              1.6     0.049\n10              81               0.22          0.43              1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 7 more variables: `free sulfur dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n\nRead in names data from 2nd sheet of the white wines Excel workbook, and overwrite the column names with that set of values\n\n# get values from 2nd sheet\nwine_columns &lt;- read_excel(\"white-wine.xlsx\",\n                           sheet = excel_sheets(\"white-wine.xlsx\")[2])\n\n# assign new names\ncolnames(white_wine_data) &lt;- wine_columns[[1]]\n\nAdd new column for type of wine (white)\n\nwhite_wine_data$type &lt;- \"white\"\n\n\n\nRed Wine Data\nRead in red wine csv, semicolon delimiter\n\nred_wine_data &lt;- read_delim(\"red-wine.csv\",\n                            delim = \";\")\n\nRows: 1599 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\ndbl (12): fixed acidity, volatile acidity, citric acid, residual sugar, chlo...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nred_wine_data\n\n# A tibble: 1,599 × 12\n   `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides\n             &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;     &lt;dbl&gt;\n 1             7.4               0.7           0                 1.9     0.076\n 2             7.8               0.88          0                 2.6     0.098\n 3             7.8               0.76          0.04              2.3     0.092\n 4            11.2               0.28          0.56              1.9     0.075\n 5             7.4               0.7           0                 1.9     0.076\n 6             7.4               0.66          0                 1.8     0.075\n 7             7.9               0.6           0.06              1.6     0.069\n 8             7.3               0.65          0                 1.2     0.065\n 9             7.8               0.58          0.02              2       0.073\n10             7.5               0.5           0.36              6.1     0.071\n# ℹ 1,589 more rows\n# ℹ 7 more variables: `free sulfur dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n\nOverwrite column names with the ones in the previously created tibble\n\ncolnames(red_wine_data) &lt;- wine_columns[[1]]\n\nAdd in new column for type\n\nred_wine_data$type &lt;- \"red\"\n\nCombine red and white wine data into one data frame\n\nwine_data &lt;- bind_rows(white_wine_data, red_wine_data)\n\nFinal analysis on combined wine data\n\nFilter on high-quality wines (&gt;6.5) with alcohol &lt; 132\nSort by quality descending\nSelect only variables containing “acid”, and the variables alcohol, type, and quality\nAdd mean and std dev of alcohol, grouped by quality\n\n\nwine_data |&gt;\n  filter(quality &gt; 6.5 & alcohol &lt; 132) |&gt;\n  arrange(desc(quality)) |&gt;\n  select(contains(\"acid\"), alcohol, type, quality) |&gt;\n  mutate(mean_alcohol = mean(alcohol), \n         sd_alcohol = sd(alcohol),\n         .by = quality\n         )\n\n# A tibble: 1,206 × 8\n   fixed_acidity volatile_acidity citric_acid alcohol type  quality mean_alcohol\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;        &lt;dbl&gt;\n 1            91             0.27        0.45     104 white       9        122. \n 2            66             0.36        0.29     124 white       9        122. \n 3            74             0.24        0.36     125 white       9        122. \n 4            69             0.36        0.34     127 white       9        122. \n 5            71             0.26        0.49     129 white       9        122. \n 6            62             0.66        0.48     128 white       8         94.1\n 7            62             0.66        0.48     128 white       8         94.1\n 8            68             0.26        0.42     105 white       8         94.1\n 9            67             0.23        0.31     107 white       8         94.1\n10            67             0.23        0.31     107 white       8         94.1\n# ℹ 1,196 more rows\n# ℹ 1 more variable: sd_alcohol &lt;dbl&gt;"
  }
]